#
#   This file was adapted from
#   https://github.com/fredrik-johansson/arb/Makefile.in
#   and
#   https://github.com/edgarcosta/controlledreduction/blob/master/Makefile.in
#   See LICENCE or <http://www.gnu.org/licenses/> for more details.
#

# Variables set by autoconf
HDME_LIB=@HDME_LIB@
HDME_LIBNAME=@HDME_LIBNAME@
HDME_LIB_STATIC=@HDME_LIB_STATIC@
HDME_MAJOR=@HDME_MAJOR@
PREFIX=@prefix@
OS=@host_os@

BUILD_SHARED=@BUILD_SHARED@
BUILD_STATIC=@BUILD_STATIC@

INCS=@INCS@
LIBS=@LIBS@

CC=@CC@
AR=@AR@
ARFLAGS=@ARFLAGS@

CFLAGS=@CFLAGS@
SHARED_CFLAGS=@SHARED_CFLAGS@
SHARED_LDFLAGS=@SHARED_LDFLAGS@

EXEEXT=@EXEEXT@

# Local variables
HDME_PATH = $(CURDIR)
CFLAGS += -DHDME_PATH='"$(HDME_PATH)"'

BUILT_LIBS =
ifneq ($(BUILD_SHARED), 0)
BUILT_LIBS += $(HDME_LIB)
endif
ifneq ($(BUILD_STATIC), 0)
BUILT_LIBS += $(HDME_LIB_STATIC)
endif

# Configuration files generated by configure
CFG_FILES = Makefile hdme.pc config.status config.log
CFG_DIRS = autom4te.cache

LIBDIR=lib

MODULES = timing hdme_data polynomials siegel theta igusa hilbert hecke modular verbose

SOURCES = $(wildcard $(patsubst %, %/*.c, $(MODULES)))
HEADERS = $(patsubst %, %.h, $(MODULES))
OBJS = $(patsubst %.c, build/%.o, $(SOURCES))
LOBJS = $(patsubst %.c, build/%.lo, $(SOURCES))

TEST_SOURCES = $(wildcard $(patsubst %, %/test/t-*.c, $(MODULES)))
TESTS = $(patsubst %.c, build/%$(EXEEXT), $(TEST_SOURCES))
RUNTESTS = $(patsubst build/%, run/%, $(TESTS))

# Files to clean
CLEANFILES = $(HDME_LIB) $(HDME_LIBNAME) $(HDME_LIBNAME).$(HDME_MAJOR) $(HDME_LIB_STATIC)

# Targets

all: library tests

check: tests $(RUNTESTS)

tests: $(TESTS)

clean:
	rm -rf build/
	rm -f $(CLEANFILES)

distclean: clean
	rm -f $(CFG_FILES)
	rm -rf $(CFG_DIRS)

library:

ifneq ($(BUILD_SHARED), 0)
library: shared
endif

ifneq ($(BUILD_STATIC), 0)
library: static
endif

static: $(HDME_LIB_STATIC)

$(HDME_LIB_STATIC): $(OBJS) | build
	@echo AR $@
	@$(AR) $(ARFLAGS) $@ $(OBJS)

shared: $(HDME_LIB)

$(HDME_LIB): $(LOBJS)
	@echo LD $(HDME_LIBNAME)
	@$(CC) $(SHARED_LDFLAGS) -o "$(HDME_LIBNAME)" $(LOBJS) $(LIBS)
	ln -sf "$(HDME_LIBNAME)" "$(HDME_LIB)"
	ln -sf "$(HDME_LIBNAME)" "$(HDME_LIBNAME).$(HDME_MAJOR)"

build:
	@mkdir -p build \
	$(foreach mod, $(MODULES), build/$(mod)) \
	$(foreach mod, $(MODULES), build/$(mod)/test) \

build/%.o: %.c $(HEADERS) | build
	@echo CC $<
	@$(CC) $(CFLAGS) $(INCS) -c $< -o $@

build/%.lo: %.c $(HEADERS) | build
	@echo CC $<
	@$(CC) $(CFLAGS) $(SHARED_CFLAGS) $(INCS) -c $< -o $@

$(TESTS): build/%$(EXEEXT): %.c $(BUILT_LIBS)
	@echo CC $@
	@$(CC) $(CFLAGS) $(INCS) -o $@ $< -L. -lhdme $(LIBS) -Wl,-rpath,"$(CURDIR)"

run/%: build/%
	@$<

install: library
	mkdir -p $(PREFIX)/$(LIBDIR)
	mkdir -p $(PREFIX)/include/hdme
	mkdir -p $(PREFIX)/lib/pkgconfig
ifneq ($(BUILD_SHARED), 0)
	cp $(HDME_LIB) "$(PREFIX)/$(LIBDIR)"
	cp -a $(shell ls $(HDME_LIBNAME)*) "$(PREFIX)/$(LIBDIR)"
endif
ifneq ($(BUILD_STATIC), 0)
	cp $(HDME_LIB_STATIC) "$(PREFIX)/$(LIBDIR)"
endif
	cp $(HEADERS) $(PREFIX)/include/hdme
	cp hdme.pc "$(PREFIX)/lib/pkgconfig/"
	if [ "$(OS)" = "darwin" ]; then \
		install_name_tool -id "$(PREFIX)/$(LIBDIR)/$(HDME_LIBNAME)" "$(DESTDIR)$(PREFIX)/$(LIBDIR)/$(HDME_LIBNAME)"; \
	fi

print-%:
	@echo '$*=$($*)'

.PHONY: check clean distclean tests library shared static examples build

